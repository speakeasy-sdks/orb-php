<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace orb\orb\Models\Operations;


class PostCustomersRequestBody
{
    /**
     * The customer's billing address; all fields in the address are optional. This address appears on customer invoices.
     * 
     * @var ?\orb\orb\Models\Operations\PostCustomersRequestBodyBillingAddress $billingAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('billing_address')]
    #[\JMS\Serializer\Annotation\Type('orb\orb\Models\Operations\PostCustomersRequestBodyBillingAddress')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PostCustomersRequestBodyBillingAddress $billingAddress = null;
    
    /**
     * An ISO 4217 currency string used for the customer's invoices and balance. If not set at creation time, will be set at subscription creation time.
     * 
     * @var ?string $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $currency = null;
    
    /**
     * A valid customer email, to be used for invoicing and notifications.
     * 
     * @var string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $email;
    
    /**
     * An optional user-defined ID for this customer resource, used throughout the system as an alias for this Customer. Use this field to identify a customer by an existing identifier in your system.
     * 
     * @var ?string $externalCustomerId
     */
	#[\JMS\Serializer\Annotation\SerializedName('external_customer_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $externalCustomerId = null;
    
    /**
     * The full name of the customer
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * This is used for creating charges or invoices in an external system via Orb. When not in test mode:
     * 
     * - the connection must first be configured in the Orb webapp. 
     * - if the provider is an invoicing provider (`stripe_invoice`, `quickbooks`, `bill.com`), any product mappings must first be configured with the Orb team.
     * 
     * @var ?\orb\orb\Models\Operations\PostCustomersRequestBodyPaymentProviderEnum $paymentProvider
     */
	#[\JMS\Serializer\Annotation\SerializedName('payment_provider')]
    #[\JMS\Serializer\Annotation\Type('enum<orb\orb\Models\Operations\PostCustomersRequestBodyPaymentProviderEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PostCustomersRequestBodyPaymentProviderEnum $paymentProvider = null;
    
    /**
     * The ID of this customer in an external payments solution, such as Stripe. This is used for creating charges or invoices in the external system via Orb.
     * 
     * @var ?string $paymentProviderId
     */
	#[\JMS\Serializer\Annotation\SerializedName('payment_provider_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentProviderId = null;
    
    /**
     * The customer's shipping address; all fields in the address are optional. Note that downstream tax calculations are based on the shipping address.
     * 
     * @var ?\orb\orb\Models\Operations\PostCustomersRequestBodyShippingAddress $shippingAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('shipping_address')]
    #[\JMS\Serializer\Annotation\Type('orb\orb\Models\Operations\PostCustomersRequestBodyShippingAddress')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PostCustomersRequestBodyShippingAddress $shippingAddress = null;
    
    /**
     * A timezone identifier from the IANA timezone database, such as "America/Los_Angeles". This defaults to your account's timezone if not set. This cannot be changed after customer creation.
     * 
     * @var ?string $timezone
     */
	#[\JMS\Serializer\Annotation\SerializedName('timezone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $timezone = null;
    
	public function __construct()
	{
		$this->billingAddress = null;
		$this->currency = null;
		$this->email = "";
		$this->externalCustomerId = null;
		$this->name = "";
		$this->paymentProvider = null;
		$this->paymentProviderId = null;
		$this->shippingAddress = null;
		$this->timezone = null;
	}
}
