<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace orb\orb\Models\Operations;


/**
 * CreateLedgerEntryRequestBodyInvoiceSettings - Passing `invoice_settings` automatically generates an invoice for the newly added credits. If `invoice_settings` is passed, you must specify `per_unit_cost_basis`, as the calculation of the invoice total is done on that basis.
 * 
 * @package orb\orb\Models\Operations
 * @access public
 */
class CreateLedgerEntryRequestBodyInvoiceSettings
{
    /**
     * Whether the credits purchase invoice should auto collect with the customer's saved payment method.
     * 
     * @var bool $autoCollection
     */
	#[\JMS\Serializer\Annotation\SerializedName('auto_collection')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $autoCollection;
    
    /**
     * An optional memo to display on the invoice.
     * 
     * @var ?string $memo
     */
	#[\JMS\Serializer\Annotation\SerializedName('memo')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $memo = null;
    
    /**
     * The net terms determines the difference between the invoice date and the issue date for the invoice. If you intend the invoice to be due on issue, set this to 0.
     * 
     * @var float $netTerms
     */
	#[\JMS\Serializer\Annotation\SerializedName('net_terms')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $netTerms;
    
	public function __construct()
	{
		$this->autoCollection = false;
		$this->memo = null;
		$this->netTerms = 0;
	}
}
