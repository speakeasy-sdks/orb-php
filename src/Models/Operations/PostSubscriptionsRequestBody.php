<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace orb\orb\Models\Operations;


class PostSubscriptionsRequestBody
{
    /**
     * Align billing periods with the subscription's start_date. If this is not provided, this defaults to aligning billing periods with the start of the month.
     * 
     * @var ?bool $alignBillingWithSubscriptionStartDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('align_billing_with_subscription_start_date')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $alignBillingWithSubscriptionStartDate = null;
    
    /**
     * The ID of the customer to subscribe.
     * 
     * @var ?string $customerId
     */
	#[\JMS\Serializer\Annotation\SerializedName('customer_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $customerId = null;
    
    /**
     * The external ID of the customer to subscribe, as an alternate to passing the `customer_id`.
     * 
     * @var ?string $externalCustomerId
     */
	#[\JMS\Serializer\Annotation\SerializedName('external_customer_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $externalCustomerId = null;
    
    /**
     * Optionally provide the name of the external marketplace that the subscription is attached to.
     * 
     * @var ?\orb\orb\Models\Operations\PostSubscriptionsRequestBodyExternalMarketplaceEnum $externalMarketplace
     */
	#[\JMS\Serializer\Annotation\SerializedName('external_marketplace')]
    #[\JMS\Serializer\Annotation\Type('enum<orb\orb\Models\Operations\PostSubscriptionsRequestBodyExternalMarketplaceEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PostSubscriptionsRequestBodyExternalMarketplaceEnum $externalMarketplace = null;
    
    /**
     * The reporting ID to associate this subscription with the external marketplace. Required if external_marketplace is specified.
     * 
     * @var ?string $externalMarketplaceReportingId
     */
	#[\JMS\Serializer\Annotation\SerializedName('external_marketplace_reporting_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $externalMarketplaceReportingId = null;
    
    /**
     * The external ID of the plan, which can be used in place of the `plan_id`.
     * 
     * @var ?string $externalPlanId
     */
	#[\JMS\Serializer\Annotation\SerializedName('external_plan_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $externalPlanId = null;
    
    /**
     * The subscription's override minimum amount for the plan.
     * 
     * @var ?string $minimumAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('minimum_amount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $minimumAmount = null;
    
    /**
     * Optionally provide a list of minimum amount or discount overrides for phases on the plan.
     * 
     * @var ?array<\orb\orb\Models\Operations\PostSubscriptionsRequestBodyPhaseOverrides> $phaseOverrides
     */
	#[\JMS\Serializer\Annotation\SerializedName('phase_overrides')]
    #[\JMS\Serializer\Annotation\Type('array<orb\orb\Models\Operations\PostSubscriptionsRequestBodyPhaseOverrides>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $phaseOverrides = null;
    
    /**
     * The plan that the given customer should be subscribed to. The plan determines the pricing and cadence of the subscription.
     * 
     * @var ?string $planId
     */
	#[\JMS\Serializer\Annotation\SerializedName('plan_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $planId = null;
    
    /**
     * Optionally provide a list of overrides for prices on the plan
     * 
     * @var ?array<mixed> $priceOverrides
     */
	#[\JMS\Serializer\Annotation\SerializedName('price_overrides')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $priceOverrides = null;
    
    /**
     * The date that Orb should start billing for the subscription, localized to the customer's timezone. If this is not provided, this defaults to the current date in the customer's timezone.
     * 
     * @var ?\DateTime $startDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('start_date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $startDate = null;
    
	public function __construct()
	{
		$this->alignBillingWithSubscriptionStartDate = null;
		$this->customerId = null;
		$this->externalCustomerId = null;
		$this->externalMarketplace = null;
		$this->externalMarketplaceReportingId = null;
		$this->externalPlanId = null;
		$this->minimumAmount = null;
		$this->phaseOverrides = null;
		$this->planId = null;
		$this->priceOverrides = null;
		$this->startDate = null;
	}
}
