<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace orb\orb\Models\Operations;

use \orb\orb\Utils\SpeakeasyMetadata;
class ListInvoicesRequest
{
    /**
     * Filter by a specific customer (cannot be used with `external_customer_id`)
     * 
     * @var ?string $customerId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=customer_id')]
    public ?string $customerId = null;
    
    /**
     * Filter by a specific customer (cannot be used with `customer_id`)
     * 
     * @var ?string $externalCustomerId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=external_customer_id')]
    public ?string $externalCustomerId = null;
    
    /**
     * Filter to invoices of a particular status (`draft`, `issued`, `paid`, `void`, `synced`); this param can be used to filter to a single status (`?status="draft"`) or a set of statuses (`?status[]=paid&status[]=void`)
     * 
     * @var mixed $status
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=status')]
    public mixed $status = null;
    
    /**
     * Filter by a specific subscription
     * 
     * @var ?string $subscriptionId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=subscription_id')]
    public ?string $subscriptionId = null;
    
	public function __construct()
	{
		$this->customerId = null;
		$this->externalCustomerId = null;
		$this->status = null;
		$this->subscriptionId = null;
	}
}
