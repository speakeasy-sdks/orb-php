<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace orb\orb\Models\Operations;


class CreateLedgerEntryRequestBody
{
    /**
     * The number of credits to effect. Note that this is required for increment or decrement operations.
     * 
     * @var ?float $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $amount = null;
    
    /**
     * The ID of the block affected by an `expiration_change`
     * 
     * @var ?string $blockId
     */
	#[\JMS\Serializer\Annotation\SerializedName('block_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $blockId = null;
    
    /**
     * Optional metadata that can be specified when adding ledger results via the API. For example, this can be used to note an increment refers to trial credits, or for noting corrections as a result of an incident, etc.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('entry_type')]
    #[\JMS\Serializer\Annotation\Type('enum<orb\orb\Models\Operations\CreateLedgerEntryRequestBodyEntryType>')]
    public CreateLedgerEntryRequestBodyEntryType $entryType;
    
    /**
     * A future date (specified in YYYY-MM-DD format) that denotes when this credit balance should expire.
     * 
     * 
     * 
     * 
     * @var ?\DateTime $expiryDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('expiry_date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $expiryDate = null;
    
    /**
     * Passing `invoice_settings` automatically generates an invoice for the newly added credits. If `invoice_settings` is passed, you must specify `per_unit_cost_basis`, as the calculation of the invoice total is done on that basis.
     * 
     * @var ?\orb\orb\Models\Operations\CreateLedgerEntryRequestBodyInvoiceSettings $invoiceSettings
     */
	#[\JMS\Serializer\Annotation\SerializedName('invoice_settings')]
    #[\JMS\Serializer\Annotation\Type('orb\orb\Models\Operations\CreateLedgerEntryRequestBodyInvoiceSettings')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateLedgerEntryRequestBodyInvoiceSettings $invoiceSettings = null;
    
    /**
     * User-specified key/value pairs for the ledger entry resource.
     * 
     * @var ?\orb\orb\Models\Operations\CreateLedgerEntryRequestBodyMetadata $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('orb\orb\Models\Operations\CreateLedgerEntryRequestBodyMetadata')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateLedgerEntryRequestBodyMetadata $metadata = null;
    
    /**
     * Can only be specified when `entry_type=increment`. How much, in USD, a customer paid for a single credit in this block
     * 
     * @var ?string $perUnitCostBasis
     */
	#[\JMS\Serializer\Annotation\SerializedName('per_unit_cost_basis')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $perUnitCostBasis = null;
    
    /**
     * A future date (specified in YYYY-MM-DD) used for `expiration_change`
     * 
     * @var ?\DateTime $targetExpiryDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('target_expiry_date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $targetExpiryDate = null;
    
	public function __construct()
	{
		$this->amount = null;
		$this->blockId = null;
		$this->description = null;
		$this->entryType = \orb\orb\Models\Operations\CreateLedgerEntryRequestBodyEntryType::Increment;
		$this->expiryDate = null;
		$this->invoiceSettings = null;
		$this->metadata = null;
		$this->perUnitCostBasis = null;
		$this->targetExpiryDate = null;
	}
}
