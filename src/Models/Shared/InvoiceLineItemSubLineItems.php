<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace orb\orb\Models\Shared;


class InvoiceLineItemSubLineItems
{
    /**
     * The total amount for this sub line item.
     * 
     * @var string $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $amount;
    
    /**
     * For configured prices that are split by a grouping key, this will be populated with the key and a value. The `amount` will be the values for this particular grouping.
     * 
     * @var \orb\orb\Models\Shared\InvoiceLineItemSubLineItemsGrouping $grouping
     */
	#[\JMS\Serializer\Annotation\SerializedName('grouping')]
    #[\JMS\Serializer\Annotation\Type('orb\orb\Models\Shared\InvoiceLineItemSubLineItemsGrouping')]
    public InvoiceLineItemSubLineItemsGrouping $grouping;
    
    /**
     * Only available if `type` is `matrix`. Contains the values of the matrix that this `sub_line_item` represents.
     * 
     * @var ?\orb\orb\Models\Shared\InvoiceLineItemSubLineItemsMatrixConfig $matrixConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('matrix_config')]
    #[\JMS\Serializer\Annotation\Type('orb\orb\Models\Shared\InvoiceLineItemSubLineItemsMatrixConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InvoiceLineItemSubLineItemsMatrixConfig $matrixConfig = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
	#[\JMS\Serializer\Annotation\SerializedName('quantity')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $quantity;
    
    /**
     * Only available if `type` is `tier`. Contains the range of units in this tier and the unit amount.
     * 
     * @var ?\orb\orb\Models\Shared\InvoiceLineItemSubLineItemsTierConfig $tierConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('tier_config')]
    #[\JMS\Serializer\Annotation\Type('orb\orb\Models\Shared\InvoiceLineItemSubLineItemsTierConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InvoiceLineItemSubLineItemsTierConfig $tierConfig = null;
    
    /**
     * An identifier for a sub line item that is specific to a pricing model.
     * 
     * @var \orb\orb\Models\Shared\InvoiceLineItemSubLineItemsType $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<orb\orb\Models\Shared\InvoiceLineItemSubLineItemsType>')]
    public InvoiceLineItemSubLineItemsType $type;
    
	public function __construct()
	{
		$this->amount = "";
		$this->grouping = new \orb\orb\Models\Shared\InvoiceLineItemSubLineItemsGrouping();
		$this->matrixConfig = null;
		$this->name = "";
		$this->quantity = 0;
		$this->tierConfig = null;
		$this->type = \orb\orb\Models\Shared\InvoiceLineItemSubLineItemsType::MATRIX;
	}
}
