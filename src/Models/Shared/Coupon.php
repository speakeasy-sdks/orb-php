<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace orb\orb\Models\Shared;


/**
 * Coupon - A coupon represents a reusable discount configuration, and have an attached redemption code that can be issued to your end users. Coupons are most often used in self-serve signup or upgrade flows in your checkout experience or billing portal.
 * 
 * 
 * To redeem a coupon, pass the `redemption_code` property in the [create subscription](https://docs.withorb.com/docs/orb-docs/api-reference/operations/create-a-subscription) or [schedule plan change](https://docs.withorb.com/docs/orb-docs/api-reference/operations/create-a-subscription-schedule-plan-change) request. 
 * 
 * 
 * @package orb\orb\Models\Shared
 * @access public
 */
class Coupon
{
    /**
     * An archived coupon can no longer be redeemed. Active coupons will have a value of null for `archived_at`; this field will be non-null for archived coupons.
     * 
     * @var ?\DateTime $archivedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('archived_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $archivedAt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('discount')]
    #[\JMS\Serializer\Annotation\Type('orb\orb\Models\Shared\Discount')]
    public Discount $discount;
    
    /**
     * This allows for a coupon's discount to apply for a limited time (determined in months); a `null` value here means "unlimited time".
     * 
     * @var ?int $durationInMonths
     */
	#[\JMS\Serializer\Annotation\SerializedName('duration_in_months')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $durationInMonths = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The maximum number of redemptions allowed for this coupon before it is exhausted; `null` here means "unlimited".
     * 
     * @var ?int $maxRedemptions
     */
	#[\JMS\Serializer\Annotation\SerializedName('max_redemptions')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxRedemptions = null;
    
    /**
     * This string can be used to redeem this coupon for a given subscription.
     * 
     * @var string $redemptionCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('redemption_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $redemptionCode;
    
    /**
     * The number of times this coupon has been redeemed.
     * 
     * @var ?int $timesRedeemed
     */
	#[\JMS\Serializer\Annotation\SerializedName('times_redeemed')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $timesRedeemed = null;
    
	public function __construct()
	{
		$this->archivedAt = null;
		$this->discount = new \orb\orb\Models\Shared\Discount();
		$this->durationInMonths = null;
		$this->id = null;
		$this->maxRedemptions = null;
		$this->redemptionCode = "";
		$this->timesRedeemed = null;
	}
}
