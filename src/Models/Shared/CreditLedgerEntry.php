<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace orb\orb\Models\Shared;


/**
 * CreditLedgerEntry - A credit ledger entry is a single entry in the customer balance ledger. More details about working with real-time balances are [here](../guides/product-catalog/prepurchase).
 * 
 * 
 * To support late and out-of-order event reporting, ledger entries are marked as either __committed_ or _pending_. Committed entries are finalized and will not change. Pending entries can be updated up until the event reporting grace period. 
 * 
 * @package orb\orb\Models\Shared
 * @access public
 */
class CreditLedgerEntry
{
    /**
     * Number of credits that were impacted. Required on creation for increment and decrement entries.
     * 
     * @var ?float $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $amount = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $createdAt;
    
    /**
     * Credit block that the entry affected
     * 
     * @var \orb\orb\Models\Shared\CreditLedgerEntryCreditBlock $creditBlock
     */
	#[\JMS\Serializer\Annotation\SerializedName('credit_block')]
    #[\JMS\Serializer\Annotation\Type('orb\orb\Models\Shared\CreditLedgerEntryCreditBlock')]
    public CreditLedgerEntryCreditBlock $creditBlock;
    
	#[\JMS\Serializer\Annotation\SerializedName('customer')]
    #[\JMS\Serializer\Annotation\Type('orb\orb\Models\Shared\CreditLedgerEntryCustomer')]
    public CreditLedgerEntryCustomer $customer;
    
    /**
     * Optional metadata that can be specified when adding ledger results via the API
     * 
     * @var string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $description;
    
	#[\JMS\Serializer\Annotation\SerializedName('ending_balance')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $endingBalance;
    
    /**
     * Committed entries are older than the ingestion grace period, and cannot change. Pending entries are newer than the grace period and are subject to updates
     * 
     * @var \orb\orb\Models\Shared\CreditLedgerEntryEntryStatus $entryStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('entry_status')]
    #[\JMS\Serializer\Annotation\Type('enum<orb\orb\Models\Shared\CreditLedgerEntryEntryStatus>')]
    public CreditLedgerEntryEntryStatus $entryStatus;
    
	#[\JMS\Serializer\Annotation\SerializedName('entry_type')]
    #[\JMS\Serializer\Annotation\Type('enum<orb\orb\Models\Shared\CreditLedgerEntryEntryType>')]
    public CreditLedgerEntryEntryType $entryType;
    
	#[\JMS\Serializer\Annotation\SerializedName('event_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eventId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * The position in which this entry appears in the ledger, starting at 0
     * 
     * @var float $ledgerSequenceNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('ledger_sequence_number')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $ledgerSequenceNumber;
    
    /**
     * User-specified metadata dictionary that's specified when adding a ledger entry. This contains key/value pairs if metadata is specified, but otherwise is an empty dictionary.
     * 
     * @var array<string, mixed> $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    public array $metadata;
    
    /**
     * In the case of an expiration change ledger entry, this represents the expiration time of the new block.
     * 
     * @var ?string $newBlockExpiryDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('new_block_expiry_date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $newBlockExpiryDate = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('price_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $priceId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('starting_balance')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $startingBalance;
    
	public function __construct()
	{
		$this->amount = null;
		$this->createdAt = new \DateTime();
		$this->creditBlock = new \orb\orb\Models\Shared\CreditLedgerEntryCreditBlock();
		$this->customer = new \orb\orb\Models\Shared\CreditLedgerEntryCustomer();
		$this->description = "";
		$this->endingBalance = 0;
		$this->entryStatus = \orb\orb\Models\Shared\CreditLedgerEntryEntryStatus::COMMITTED;
		$this->entryType = \orb\orb\Models\Shared\CreditLedgerEntryEntryType::INCREMENT;
		$this->eventId = null;
		$this->id = "";
		$this->ledgerSequenceNumber = 0;
		$this->metadata = [];
		$this->newBlockExpiryDate = null;
		$this->priceId = null;
		$this->startingBalance = 0;
	}
}
