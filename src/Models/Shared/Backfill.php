<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace orb\orb\Models\Shared;


/**
 * Backfill - A backfill represents an update to historical usage data, adding or replacing events in a timeframe.
 * 
 * @package orb\orb\Models\Shared
 * @access public
 */
class Backfill
{
    /**
     * If in the future, the time at which the backfill will automatically close. If in the past, the time at which the backfill was closed.
     * 
     * @var \DateTime $closeTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('close_time')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $closeTime;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $createdAt;
    
    /**
     * The customer ID this backfill is scoped to. If null, this backfill is not scoped to a single customer.
     * 
     * @var ?string $customerId
     */
	#[\JMS\Serializer\Annotation\SerializedName('customer_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $customerId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * The time at which this backfill was reverted.
     * 
     * @var ?\DateTime $revertedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('reverted_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $revertedAt = null;
    
    /**
     * The status of the backfill.
     * 
     * @var \orb\orb\Models\Shared\BackfillStatus $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<orb\orb\Models\Shared\BackfillStatus>')]
    public BackfillStatus $status;
    
	#[\JMS\Serializer\Annotation\SerializedName('timeframe_end')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $timeframeEnd;
    
	#[\JMS\Serializer\Annotation\SerializedName('timeframe_start')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $timeframeStart;
    
	public function __construct()
	{
		$this->closeTime = new \DateTime();
		$this->createdAt = new \DateTime();
		$this->customerId = null;
		$this->id = "";
		$this->revertedAt = null;
		$this->status = \orb\orb\Models\Shared\BackfillStatus::Pending;
		$this->timeframeEnd = new \DateTime();
		$this->timeframeStart = new \DateTime();
	}
}
